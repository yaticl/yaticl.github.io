<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>Ya-Ti's Blog - Python</title><link href="https://yaticl.github.io/" rel="alternate"></link><link href="https://yaticl.github.io/feeds/python.atom.xml" rel="self"></link><id>https://yaticl.github.io/</id><updated>2020-09-07T15:39:00+08:00</updated><entry><title>如何解決 Windows 系統下 Matplotlib 在 HiDPI 顯示器顯示過小的問題</title><link href="https://yaticl.github.io/%E8%A7%A3%E6%B1%BA-Windows-%E7%B3%BB%E7%B5%B1%E4%B8%8B-Matplotlib-%E5%9C%A8-HiDPI-%E9%A1%AF%E7%A4%BA%E5%99%A8%E9%A1%AF%E7%A4%BA%E9%81%8E%E5%B0%8F%E7%9A%84%E5%95%8F%E9%A1%8C.html" rel="alternate"></link><published>2019-04-23T20:05:00+08:00</published><updated>2019-04-23T20:05:00+08:00</updated><author><name>Ya-Ti</name></author><id>tag:yaticl.github.io,2019-04-23:/解決-Windows-系統下-Matplotlib-在-HiDPI-顯示器顯示過小的問題.html</id><summary type="html">&lt;h2 id="_1"&gt;前言&lt;/h2&gt;
&lt;p&gt;由於在使用 Matplotlib 時，發現在使用高解析度的螢幕有內容顯示過小的問題，不會隨著 Windows 的設定來縮放，導致看起來很吃力 …&lt;/p&gt;</summary><content type="html">&lt;h2 id="_1"&gt;前言&lt;/h2&gt;
&lt;p&gt;由於在使用 Matplotlib 時，發現在使用高解析度的螢幕有內容顯示過小的問題，不會隨著 Windows 的設定來縮放，導致看起來很吃力。經過搜尋，發現是因為 Matplotlib 預設使用 Qt5 來 rendering，而 Qt5 在 Windows 下預設不會自動縮放，這裡介紹兩種方法來解決這個問題。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;更新&lt;/strong&gt;：新增如何在 Qt5 中啟用 DPI 縮放的功能。&lt;/p&gt;
&lt;h2 id="qt5dpi"&gt;方法一：啟用 Qt5 中的 DPI 縮放功能&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;如何啟用 Qt5 DPI scaling 的範例 code：&lt;/strong&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="c1"&gt;# 需要先 import matplotlib 的 backend Qt5&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;PyQt5&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="nn"&gt;qt&lt;/span&gt;

&lt;span class="c1"&gt;# 用 matplotlib 畫圖之前要先啟用 Qt5 DPI scaling&lt;/span&gt;
&lt;span class="n"&gt;qt&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;QtWidgets&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;QApplication&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;setAttribute&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;qt&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;QtCore&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Qt&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;AA_EnableHighDpiScaling&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kc"&gt;True&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h2 id="matplotlibbackend"&gt;方法二：替換 Matplotlib 的 backend&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;此為如何將 backend 從預設的 Qt5 替換為 Tk 的範例 code：&lt;/strong&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;matplotlib.pyplot&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="nn"&gt;plt&lt;/span&gt;

&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;plt&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get_backend&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;Qt5Agg&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;  &lt;span class="c1"&gt;# 判斷 backend 是否為 Qt5&lt;/span&gt;
    &lt;span class="n"&gt;plt&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;switch_backend&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;TkAgg&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;    &lt;span class="c1"&gt;# 將 backend 替換為 Tk&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Tk 為 Python 內建的原生 UI，可以隨著 Windows 的設定來縮放，不過可能是因為用 bilinear 來縮放，某些影像 rendering 可能會有 aliasing，手動調整視窗大小可以改善此瑕疵。&lt;/p&gt;
&lt;h2 id="_2"&gt;參考資料&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;&lt;a href="https://coad.ca/2017/05/15/one-way-to-deal-with-high-dpi-4k-screens-in-python/"&gt;One way to deal with High DPI (4k) Screens in Python&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;關於 Matplotlib backend 的詳細資料與還有哪些 backend 能替換，可以閱讀官網上的&lt;a href="https://matplotlib.org/faq/usage_faq.html#what-is-a-backend"&gt;說明&lt;/a&gt;。&lt;/li&gt;
&lt;/ol&gt;</content><category term="Python"></category><category term="Python"></category><category term="Tips"></category><category term="Windows"></category></entry><entry><title>Miniconda</title><link href="https://yaticl.github.io/miniconda.html" rel="alternate"></link><published>2019-04-11T15:58:00+08:00</published><updated>2020-09-07T15:15:00+08:00</updated><author><name>Ya-Ti</name></author><id>tag:yaticl.github.io,2019-04-11:/miniconda.html</id><summary type="html">&lt;h2 id="_1"&gt;簡介&lt;/h2&gt;
&lt;p&gt;對剛入們 Python 的人，安裝整個&lt;a href="https://yaticl.github.io/python-心得.html"&gt;Anaconda Distribution&lt;/a&gt;是最容易的方式。但是一般而言，會建議 Python 專案開發是一個專案建立一個虛擬環境。既 …&lt;/p&gt;</summary><content type="html">&lt;h2 id="_1"&gt;簡介&lt;/h2&gt;
&lt;p&gt;對剛入們 Python 的人，安裝整個&lt;a href="https://yaticl.github.io/python-心得.html"&gt;Anaconda Distribution&lt;/a&gt;是最容易的方式。但是一般而言，會建議 Python 專案開發是一個專案建立一個虛擬環境。既然每一個專案都要建立一個環境，base environment 理應不需要安裝這麼多套件，所以當你只想要使用 conda 來管理環境可以只選擇安裝&lt;a href="https://docs.conda.io/en/latest/miniconda.html"&gt;Miniconda&lt;/a&gt;，它只會安裝最基本 conda 管理工具。&lt;/p&gt;
&lt;h2 id="_2"&gt;初始化&lt;/h2&gt;
&lt;p&gt;安裝完成後可以執行 (conda &amp;gt; 4.6.12):&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;conda&lt;span class="w"&gt; &lt;/span&gt;init
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;來初始化 Anaconda 環境，執行後可以讓支援的 shell 都可以使用 conda。
Windows 環境下，我喜歡搭配 Microsoft PowerShell &lt;a href="https://github.com/PowerShell/PowerShell/"&gt;(PowerShell Core)&lt;/a&gt;，原因是因為&lt;code&gt;conda activate&lt;/code&gt;和 Windows PowerShell 有相容性問題，又覺得&lt;code&gt;CMD&lt;/code&gt;太 old school 了。
初始化後，&lt;code&gt;%USERPROFILE%\Documents\&lt;/code&gt;下會多&lt;code&gt;PowerShell\&lt;/code&gt;和&lt;code&gt;WindowsPowerShell\&lt;/code&gt;兩個資料夾儲存設定檔案，前者個是屬於 PowerShell Core，後者是屬於 Windows PowerShell，由於後者的設定檔案會導致啟動的時候報錯，可以刪除。
如果不喜歡每次打開 shell 都會自動啟用 base 環境，可以執行 :&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;conda&lt;span class="w"&gt; &lt;/span&gt;config&lt;span class="w"&gt; &lt;/span&gt;--set&lt;span class="w"&gt; &lt;/span&gt;auto_activate_base&lt;span class="w"&gt; &lt;/span&gt;False
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;來取消自動啟用。&lt;/p&gt;
&lt;h2 id="anaconda-navigator"&gt;Anaconda Navigator&lt;/h2&gt;
&lt;p&gt;Miniconda 裡面不包含 Anaconda Navigator，如果想用 Anaconda Navigator，這個圖形化管理介面來管理環境， 可以在&lt;code&gt;base&lt;/code&gt;環境中將它安裝回來，在文字介面的 Shell 輸入：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;conda&lt;span class="w"&gt; &lt;/span&gt;install&lt;span class="w"&gt; &lt;/span&gt;anaconda-navigator
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;如此就能簡單的安裝完成了。&lt;/p&gt;</content><category term="Python"></category><category term="Python"></category><category term="Anaconda"></category></entry><entry><title>Python 心得</title><link href="https://yaticl.github.io/python-%E5%BF%83%E5%BE%97.html" rel="alternate"></link><published>2018-07-04T17:22:00+08:00</published><updated>2020-09-07T15:39:00+08:00</updated><author><name>Ya-Ti</name></author><id>tag:yaticl.github.io,2018-07-04:/python-心得.html</id><summary type="html">&lt;h2 id="python"&gt;Python&lt;/h2&gt;
&lt;p&gt;&lt;a href="https://zh.wikipedia.org/zh-tw/Python"&gt;Python&lt;/a&gt;是一種直譯式高階程式語言，由 Guido van Rossum 發明，其哲學是強調 code 的可讀性和簡潔的語法，而且具有動態型別與自動記憶 …&lt;/p&gt;</summary><content type="html">&lt;h2 id="python"&gt;Python&lt;/h2&gt;
&lt;p&gt;&lt;a href="https://zh.wikipedia.org/zh-tw/Python"&gt;Python&lt;/a&gt;是一種直譯式高階程式語言，由 Guido van Rossum 發明，其哲學是強調 code 的可讀性和簡潔的語法，而且具有動態型別與自動記憶體管理功能。Python 常被用於 Web 開發與科學計算，特別是最近機器學習函式庫幾乎都有提供 Python API。&lt;/p&gt;
&lt;h3 id="python_1"&gt;為什麼我要選擇 Python？&lt;/h3&gt;
&lt;p&gt;我在大學時期比較常用的是 MATLAB 來做科學計算，MATLAB 確實方便好用，但畢竟是付費軟體，通常個人也買不起，出了校門可能就沒辦法用，因此嘗試轉用 Python。因為 Python 是開源的高階語言，藉由開源社群的力量，有著大量的函式庫，能做的事其實比 MATLAB 還多，而且用起來更自由，不用像 MATLAB 綁定傻大粗又不穩的開發環境。個人覺得以科學計算而言，Python 的上手難度沒有比 MATLAB 難上多少，但是可以獲得自由，所以入坑 Python。&lt;/p&gt;
&lt;h2 id="anaconda-distribution"&gt;Anaconda Distribution&lt;/h2&gt;
&lt;h3 id="_1"&gt;簡介&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://www.anaconda.com/distribution/"&gt;Anaconda Distribution&lt;/a&gt;是一個面相資料科學的免費 Python 發行版，收集了超過 1000 種的開源套件，並有自己的套件與環境管理工具，適合 Python 的新手使用，安裝方式很像 MATLAB，主程式 +Toolbox。&lt;/p&gt;
&lt;p&gt;Anaconda 對 Windows、macOS 與 Linux 都有提供支援，同時支援 Python 2 和 Python 3，安裝包預裝超過 150 個套件，並可以選擇性安裝開源的 IDE &lt;a href="https://github.com/spyder-ide/spyder-docs"&gt;Spyder&lt;/a&gt;或是&lt;a href="https://code.visualstudio.com/"&gt;Visual Studio Code&lt;/a&gt;，但是也可以搭配任何支援 Python 的開發環境或是編輯器使用，可以選自己喜歡的用法，像我目前偏好搭配 Visual Studio Code 使用，因為它輕量且與&lt;a href="https://git-scm.com/"&gt;Git&lt;/a&gt;整合度高。&lt;/p&gt;
&lt;h3 id="conda"&gt;Conda&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://conda.io"&gt;conda&lt;/a&gt;是 Anaconda 自帶的套件管理工具，conda 的用法，官方有提供簡單上手的表格如下&lt;/p&gt;
&lt;p&gt;&lt;img alt="conda_1" src="https://d8cbkg.bn.files.1drv.com/y4mK4wSwoOHdi3H0WVObnXFrj-AJlzrBrM4n_XaTB7TRrI3G1hT2xNZxbWq5nU-SLvrFBbSyCrpgQOZOhajjUdN3I47F3YacT5bcoTtQXX7K4v_s7HgVT2ki7HR-Ds2NshOFi0WRzsJ0rsrxmx8K-aIgftP6WhJJzwkUcLazrq4kKe0cNMewg-gAw5EKap_S-bCFuGwl4tOhsHIj6AzzurOGw?width=944&amp;amp;height=1024&amp;amp;cropmode=none"&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="conda_2" src="https://scuseg.bn.files.1drv.com/y4mwoS4LZkGNLbw296g_0dLumzjGWs1cm3sCbg1mLU7bL1t36xB9MNyoBCN5VvleLo32IjI9F1dmQtMMH2E6DmpfWJnDo9wIJkO0qaebMHH4T16af6WlMEl3VQT2Rjo1JdO3ERaN5HgjIOXXdHMBACu5afCPnAn3TsYShI1rpTcX9Bzx-WdKLt0DYi0P6AovfOZPAYkV3BeHT2L5Keo3BfPIA?width=970&amp;amp;height=1024&amp;amp;cropmode=none"&gt;&lt;/p&gt;
&lt;h3 id="_2"&gt;常用套件&lt;/h3&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style="text-align: center;"&gt;Package&lt;/th&gt;
&lt;th style="text-align: center;"&gt;Summary&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style="text-align: center;"&gt;&lt;a href="http://imageio.github.io/"&gt;imageio&lt;/a&gt;&lt;/td&gt;
&lt;td style="text-align: center;"&gt;A library for reading and writing image&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style="text-align: center;"&gt;&lt;a href="http://ipython.org/"&gt;IPython&lt;/a&gt;&lt;/td&gt;
&lt;td style="text-align: center;"&gt;Productive Interactive Computing&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style="text-align: center;"&gt;&lt;a href="http://jupyter.org/"&gt;Jupyter&lt;/a&gt;&lt;/td&gt;
&lt;td style="text-align: center;"&gt;Jupyter Notebook&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style="text-align: center;"&gt;&lt;a href="https://matplotlib.org/"&gt;Matplotlib&lt;/a&gt;&lt;/td&gt;
&lt;td style="text-align: center;"&gt;A rich architecture for interactive computing&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style="text-align: center;"&gt;&lt;a href="http://www.numpy.org/"&gt;NumPy&lt;/a&gt;&lt;/td&gt;
&lt;td style="text-align: center;"&gt;Array processing for numbers, strings, records, and objects&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style="text-align: center;"&gt;&lt;a href="http://opencv.org/"&gt;OpenCV&lt;/a&gt;&lt;/td&gt;
&lt;td style="text-align: center;"&gt;Computer vision and machine learning library&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style="text-align: center;"&gt;&lt;a href="http://scikit-image.org/"&gt;scikit-image&lt;/a&gt;&lt;/td&gt;
&lt;td style="text-align: center;"&gt;A collection of algorithms for image processing&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style="text-align: center;"&gt;&lt;a href="http://scikit-learn.org/stable/"&gt;scikit-learn&lt;/a&gt;&lt;/td&gt;
&lt;td style="text-align: center;"&gt;A set of python modules for machine learning and data mining&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style="text-align: center;"&gt;&lt;a href="https://www.scipy.org/"&gt;SciPy&lt;/a&gt;&lt;/td&gt;
&lt;td style="text-align: center;"&gt;Scientific library for mathematics, science, and engineering&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style="text-align: center;"&gt;&lt;a href="https://pytorch.org/"&gt;PyTorch&lt;/a&gt;&lt;/td&gt;
&lt;td style="text-align: center;"&gt;An open source machine learning framework that accelerates the path from research prototyping to production deployment.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style="text-align: center;"&gt;&lt;a href="https://www.tensorflow.org/"&gt;TensorFlow&lt;/a&gt;&lt;/td&gt;
&lt;td style="text-align: center;"&gt;An end-to-end open source machine learning platform&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;</content><category term="Python"></category><category term="Python"></category><category term="MATLAB"></category><category term="Anaconda"></category></entry></feed>